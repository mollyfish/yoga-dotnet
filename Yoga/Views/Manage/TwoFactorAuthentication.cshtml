@model TwoFactorAuthenticationViewModel
@{
    ViewData["Title"] = "Two-factor authentication";
    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);
}

<h4>@ViewData["Title"]</h4>
@if (Model.Is2faEnabled)
{
    if (Model.RecoveryCodesLeft == 0)
    {
            <strong>You have no recovery codes left.</strong>
            <p>You must <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
    }
    else if (Model.RecoveryCodesLeft == 1)
    {
            <strong>You have 1 recovery code left.</strong>
            <p>You can <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
    }
    else if (Model.RecoveryCodesLeft <= 3)
    {
            <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
            <p>You should <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
    }

    <a asp-action="Disable2faWarning">Disable 2FA</a>
    <a asp-action="GenerateRecoveryCodes">Reset recovery codes</a>
}

<h5>Authenticator app</h5>
@if (!Model.HasAuthenticator)
{
    <a asp-action="EnableAuthenticator">Add authenticator app</a>
}
else
{
    <a asp-action="EnableAuthenticator">Configure authenticator app</a>
    <a asp-action="ResetAuthenticatorWarning">Reset authenticator key</a>
}


